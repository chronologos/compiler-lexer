2 shift/reduce conflicts

error:  state 35: shift/reduce conflict (shift FUNCTION, reduce by rule 58)
error:  state 38: shift/reduce conflict (shift TYPE, reduce by rule 56)

state 0:

	program : . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 10
	program	goto 161
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 1:

	exp : arrayDecExp .  (reduce by rule 28)



	.	reduce by rule 28


state 2:

	exp : breakExp .  (reduce by rule 27)



	.	reduce by rule 27


state 3:

	exp : forExp .  (reduce by rule 26)



	.	reduce by rule 26


state 4:

	exp : whileExp .  (reduce by rule 25)



	.	reduce by rule 25


state 5:

	exp : ifExp .  (reduce by rule 20)



	.	reduce by rule 20


state 6:

	exp : assignExp .  (reduce by rule 21)



	.	reduce by rule 21


state 7:

	exp : recordExp .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : seqexp .  (reduce by rule 23)



	.	reduce by rule 23


state 9:

	exp : lvalue .  (reduce by rule 19)
	assignExp : lvalue . ASSIGN exp 

	ASSIGN	shift 22


	.	reduce by rule 19


state 10:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 0


state 11:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 12:

	breakExp : BREAK .  (reduce by rule 52)



	.	reduce by rule 52


state 13:

	exp : LET . decs IN exp letSeqExp END 

	FUNCTION	shift 44
	VAR	shift 43
	TYPE	shift 42

	decs	goto 41
	dec	goto 40
	tydec	goto 39
	tydecs	goto 38
	vardec	goto 37
	fundec	goto 36
	fundecs	goto 35

	.	reduce by rule 55


state 14:

	forExp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 45


	.	error


state 15:

	whileExp : WHILE . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 46
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 16:

	ifExp : IF . exp THEN exp ELSE exp 
	ifExp : IF . exp THEN exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 47
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 17:

	exp : MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 48
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 18:

	exp : LPAREN . RPAREN 
	seqexp : LPAREN . exp seqexpOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	RPAREN	shift 50
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 49
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 19:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 20:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 21:

	exp : ID . LPAREN funCallExpList RPAREN 
	lvalue : ID . lvalueOpt 
	recordExp : ID . LBRACE RBRACE 
	recordExp : ID . LBRACE ID EQ exp recordExpOpt RBRACE 
	arrayDecExp : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 55
	LBRACK	shift 54
	LBRACE	shift 53
	DOT	shift 52

	lvalueOpt	goto 51

	.	reduce by rule 38


state 22:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 56
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 23:

	exp : exp OR . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 57
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 24:

	exp : exp AND . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 58
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 25:

	exp : exp GE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 59
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 26:

	exp : exp GT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 60
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 27:

	exp : exp LE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 61
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 28:

	exp : exp LT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 62
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 29:

	exp : exp NEQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 63
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 30:

	exp : exp EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 64
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 31:

	exp : exp DIVIDE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 65
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 32:

	exp : exp TIMES . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 66
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 33:

	exp : exp MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 67
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 34:

	exp : exp PLUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 68
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error

error:  state 35: shift/reduce conflict (shift FUNCTION, reduce by rule 58)

state 35:

	dec : fundecs .  (reduce by rule 58)
	fundecs : fundecs . fundec 

	FUNCTION	shift 44

	fundec	goto 69

	.	reduce by rule 58


state 36:

	fundecs : fundec .  (reduce by rule 74)



	.	reduce by rule 74


state 37:

	dec : vardec .  (reduce by rule 57)



	.	reduce by rule 57

error:  state 38: shift/reduce conflict (shift TYPE, reduce by rule 56)

state 38:

	dec : tydecs .  (reduce by rule 56)
	tydecs : tydecs . tydec 

	TYPE	shift 42

	tydec	goto 70

	.	reduce by rule 56


state 39:

	tydecs : tydec .  (reduce by rule 60)



	.	reduce by rule 60


state 40:

	decs : dec . decs 

	FUNCTION	shift 44
	VAR	shift 43
	TYPE	shift 42

	decs	goto 71
	dec	goto 40
	tydec	goto 39
	tydecs	goto 38
	vardec	goto 37
	fundec	goto 36
	fundecs	goto 35

	.	reduce by rule 55


state 41:

	exp : LET decs . IN exp letSeqExp END 

	IN	shift 72


	.	error


state 42:

	tydec : TYPE . ID EQ ty 

	ID	shift 73


	.	error


state 43:

	vardec : VAR . ID varDecOpt 

	ID	shift 74


	.	error


state 44:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN fundecOpts 

	ID	shift 75


	.	error


state 45:

	forExp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 76


	.	error


state 46:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	whileExp : WHILE exp . DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 77


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	ifExp : IF exp . THEN exp ELSE exp 
	ifExp : IF exp . THEN exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	THEN	shift 78


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	exp : MINUS exp .  (reduce by rule 16)



	.	reduce by rule 16


state 49:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	seqexp : LPAREN exp . seqexpOpt 

	SEMICOLON	shift 81
	RPAREN	shift 80
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	seqexpOpt	goto 79

	.	error


state 50:

	exp : LPAREN RPAREN .  (reduce by rule 18)



	.	reduce by rule 18


state 51:

	lvalue : ID lvalueOpt .  (reduce by rule 35)



	.	reduce by rule 35


state 52:

	lvalueOpt : DOT . ID lvalueOpt 

	ID	shift 82


	.	error


state 53:

	recordExp : ID LBRACE . RBRACE 
	recordExp : ID LBRACE . ID EQ exp recordExpOpt RBRACE 

	ID	shift 84
	RBRACE	shift 83


	.	error


state 54:

	arrayDecExp : ID LBRACK . exp RBRACK OF exp 
	lvalueOpt : LBRACK . exp RBRACK lvalueOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 85
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 55:

	exp : ID LPAREN . funCallExpList RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 87
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	funCallExpList	goto 86
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	reduce by rule 40


state 56:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 39)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 39


state 57:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 13)
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25


	.	reduce by rule 13


state 58:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 12)
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25


	.	reduce by rule 12


state 59:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 9)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 9
	COMMA	reduce by rule 9
	SEMICOLON	reduce by rule 9
	RPAREN	reduce by rule 9
	RBRACK	reduce by rule 9
	RBRACE	reduce by rule 9
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 9
	OR	reduce by rule 9
	THEN	reduce by rule 9
	ELSE	reduce by rule 9
	TO	reduce by rule 9
	DO	reduce by rule 9
	IN	reduce by rule 9
	END	reduce by rule 9
	FUNCTION	reduce by rule 9
	VAR	reduce by rule 9
	TYPE	reduce by rule 9


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 8)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 8
	COMMA	reduce by rule 8
	SEMICOLON	reduce by rule 8
	RPAREN	reduce by rule 8
	RBRACK	reduce by rule 8
	RBRACE	reduce by rule 8
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 8
	OR	reduce by rule 8
	THEN	reduce by rule 8
	ELSE	reduce by rule 8
	TO	reduce by rule 8
	DO	reduce by rule 8
	IN	reduce by rule 8
	END	reduce by rule 8
	FUNCTION	reduce by rule 8
	VAR	reduce by rule 8
	TYPE	reduce by rule 8


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 10)
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 10
	COMMA	reduce by rule 10
	SEMICOLON	reduce by rule 10
	RPAREN	reduce by rule 10
	RBRACK	reduce by rule 10
	RBRACE	reduce by rule 10
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 10
	OR	reduce by rule 10
	THEN	reduce by rule 10
	ELSE	reduce by rule 10
	TO	reduce by rule 10
	DO	reduce by rule 10
	IN	reduce by rule 10
	END	reduce by rule 10
	FUNCTION	reduce by rule 10
	VAR	reduce by rule 10
	TYPE	reduce by rule 10


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 11)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 11
	COMMA	reduce by rule 11
	SEMICOLON	reduce by rule 11
	RPAREN	reduce by rule 11
	RBRACK	reduce by rule 11
	RBRACE	reduce by rule 11
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 11
	OR	reduce by rule 11
	THEN	reduce by rule 11
	ELSE	reduce by rule 11
	TO	reduce by rule 11
	DO	reduce by rule 11
	IN	reduce by rule 11
	END	reduce by rule 11
	FUNCTION	reduce by rule 11
	VAR	reduce by rule 11
	TYPE	reduce by rule 11


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 7)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 7
	COMMA	reduce by rule 7
	SEMICOLON	reduce by rule 7
	RPAREN	reduce by rule 7
	RBRACK	reduce by rule 7
	RBRACE	reduce by rule 7
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 7
	OR	reduce by rule 7
	THEN	reduce by rule 7
	ELSE	reduce by rule 7
	TO	reduce by rule 7
	DO	reduce by rule 7
	IN	reduce by rule 7
	END	reduce by rule 7
	FUNCTION	reduce by rule 7
	VAR	reduce by rule 7
	TYPE	reduce by rule 7


	.	error


state 64:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 6)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 6
	COMMA	reduce by rule 6
	SEMICOLON	reduce by rule 6
	RPAREN	reduce by rule 6
	RBRACK	reduce by rule 6
	RBRACE	reduce by rule 6
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 6
	OR	reduce by rule 6
	THEN	reduce by rule 6
	ELSE	reduce by rule 6
	TO	reduce by rule 6
	DO	reduce by rule 6
	IN	reduce by rule 6
	END	reduce by rule 6
	FUNCTION	reduce by rule 6
	VAR	reduce by rule 6
	TYPE	reduce by rule 6


	.	error


state 65:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 14)
	exp : exp . MINUS exp 



	.	reduce by rule 14


state 66:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 5)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 



	.	reduce by rule 5


state 67:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 15)

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 15


state 68:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 4)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 4


state 69:

	fundecs : fundecs fundec .  (reduce by rule 73)



	.	reduce by rule 73


state 70:

	tydecs : tydecs tydec .  (reduce by rule 59)



	.	reduce by rule 59


state 71:

	decs : dec decs .  (reduce by rule 54)



	.	reduce by rule 54


state 72:

	exp : LET decs IN . exp letSeqExp END 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 88
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 73:

	tydec : TYPE ID . EQ ty 

	EQ	shift 89


	.	error


state 74:

	vardec : VAR ID . varDecOpt 

	COLON	shift 92
	ASSIGN	shift 91

	varDecOpt	goto 90

	.	error


state 75:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN fundecOpts 

	LPAREN	shift 93


	.	error


state 76:

	forExp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 94
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 77:

	whileExp : WHILE exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 95
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 78:

	ifExp : IF exp THEN . exp ELSE exp 
	ifExp : IF exp THEN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 96
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 79:

	seqexp : LPAREN exp seqexpOpt .  (reduce by rule 44)



	.	reduce by rule 44


state 80:

	seqexpOpt : RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 81:

	seqexpOpt : SEMICOLON . exp seqexpOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 97
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 82:

	lvalueOpt : DOT ID . lvalueOpt 

	LBRACK	shift 99
	DOT	shift 52

	lvalueOpt	goto 98

	.	reduce by rule 38


state 83:

	recordExp : ID LBRACE RBRACE .  (reduce by rule 31)



	.	reduce by rule 31


state 84:

	recordExp : ID LBRACE ID . EQ exp recordExpOpt RBRACE 

	EQ	shift 100


	.	error


state 85:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	arrayDecExp : ID LBRACK exp . RBRACK OF exp 
	lvalueOpt : LBRACK exp . RBRACK lvalueOpt 

	RBRACK	shift 101
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 86:

	exp : ID LPAREN funCallExpList . RPAREN 

	RPAREN	shift 102


	.	error


state 87:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	funCallExpList : exp . funCallExpListOpt 

	COMMA	shift 104
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	funCallExpListOpt	goto 103

	.	reduce by rule 43


state 88:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	exp : LET decs IN exp . letSeqExp END 

	SEMICOLON	shift 106
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	letSeqExp	goto 105

	.	reduce by rule 49


state 89:

	tydec : TYPE ID EQ . ty 

	ID	shift 110
	LBRACE	shift 109
	ARRAY	shift 108

	ty	goto 107

	.	error


state 90:

	vardec : VAR ID varDecOpt .  (reduce by rule 70)



	.	reduce by rule 70


state 91:

	varDecOpt : ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 111
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 92:

	varDecOpt : COLON . ID ASSIGN exp 

	ID	shift 112


	.	error


state 93:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN fundecOpts 

	ID	shift 115

	tyfields	goto 114
	tyfieldsOne	goto 113

	.	reduce by rule 67


state 94:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	forExp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	TO	shift 116


	.	error


state 95:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	whileExp : WHILE exp DO exp .  (reduce by rule 51)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 51


state 96:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	ifExp : IF exp THEN exp . ELSE exp 
	ifExp : IF exp THEN exp .  (reduce by rule 34)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	ELSE	shift 117


	.	reduce by rule 34


state 97:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	seqexpOpt : SEMICOLON exp . seqexpOpt 

	SEMICOLON	shift 81
	RPAREN	shift 80
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	seqexpOpt	goto 118

	.	error


state 98:

	lvalueOpt : DOT ID lvalueOpt .  (reduce by rule 36)



	.	reduce by rule 36


state 99:

	lvalueOpt : LBRACK . exp RBRACK lvalueOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 119
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 100:

	recordExp : ID LBRACE ID EQ . exp recordExpOpt RBRACE 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 120
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 101:

	arrayDecExp : ID LBRACK exp RBRACK . OF exp 
	lvalueOpt : LBRACK exp RBRACK . lvalueOpt 

	LBRACK	shift 99
	DOT	shift 52
	OF	shift 122

	lvalueOpt	goto 121

	.	reduce by rule 38


state 102:

	exp : ID LPAREN funCallExpList RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 103:

	funCallExpList : exp funCallExpListOpt .  (reduce by rule 41)



	.	reduce by rule 41


state 104:

	funCallExpListOpt : COMMA . exp funCallExpListOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 123
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 105:

	exp : LET decs IN exp letSeqExp . END 

	END	shift 124


	.	error


state 106:

	letSeqExp : SEMICOLON . exp letSeqExp 
	letSeqExp : SEMICOLON .  (reduce by rule 48)

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 125
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	reduce by rule 48


state 107:

	tydec : TYPE ID EQ ty .  (reduce by rule 61)



	.	reduce by rule 61


state 108:

	ty : ARRAY . OF ID 

	OF	shift 126


	.	error


state 109:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 115

	tyfields	goto 127
	tyfieldsOne	goto 113

	.	reduce by rule 67


state 110:

	ty : ID .  (reduce by rule 62)



	.	reduce by rule 62


state 111:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	varDecOpt : ASSIGN exp .  (reduce by rule 71)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 71


state 112:

	varDecOpt : COLON ID . ASSIGN exp 

	ASSIGN	shift 128


	.	error


state 113:

	tyfields : tyfieldsOne . tyfieldscommaOpt 

	COMMA	shift 130

	tyfieldscommaOpt	goto 129

	.	reduce by rule 69


state 114:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN fundecOpts 

	RPAREN	shift 131


	.	error


state 115:

	tyfieldsOne : ID . COLON ID 

	COLON	shift 132


	.	error


state 116:

	forExp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 133
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 117:

	ifExp : IF exp THEN exp ELSE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 134
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 118:

	seqexpOpt : SEMICOLON exp seqexpOpt .  (reduce by rule 46)



	.	reduce by rule 46


state 119:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	lvalueOpt : LBRACK exp . RBRACK lvalueOpt 

	RBRACK	shift 135
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 120:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	recordExp : ID LBRACE ID EQ exp . recordExpOpt RBRACE 

	COMMA	shift 137
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	recordExpOpt	goto 136

	.	reduce by rule 29


state 121:

	lvalueOpt : LBRACK exp RBRACK lvalueOpt .  (reduce by rule 37)



	.	reduce by rule 37


state 122:

	arrayDecExp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 138
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 123:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	funCallExpListOpt : COMMA exp . funCallExpListOpt 

	COMMA	shift 104
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	funCallExpListOpt	goto 139

	.	reduce by rule 43


state 124:

	exp : LET decs IN exp letSeqExp END .  (reduce by rule 24)



	.	reduce by rule 24


state 125:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	letSeqExp : SEMICOLON exp . letSeqExp 

	SEMICOLON	shift 106
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	letSeqExp	goto 140

	.	reduce by rule 49


state 126:

	ty : ARRAY OF . ID 

	ID	shift 141


	.	error


state 127:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 142


	.	error


state 128:

	varDecOpt : COLON ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 143
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 129:

	tyfields : tyfieldsOne tyfieldscommaOpt .  (reduce by rule 66)



	.	reduce by rule 66


state 130:

	tyfieldscommaOpt : COMMA . tyfieldsOne tyfieldscommaOpt 

	ID	shift 115

	tyfieldsOne	goto 144

	.	error


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . fundecOpts 

	COLON	shift 147
	EQ	shift 146

	fundecOpts	goto 145

	.	error


state 132:

	tyfieldsOne : ID COLON . ID 

	ID	shift 148


	.	error


state 133:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	forExp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 149


	.	error


state 134:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	ifExp : IF exp THEN exp ELSE exp .  (reduce by rule 33)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 33


state 135:

	lvalueOpt : LBRACK exp RBRACK . lvalueOpt 

	LBRACK	shift 99
	DOT	shift 52

	lvalueOpt	goto 121

	.	reduce by rule 38


state 136:

	recordExp : ID LBRACE ID EQ exp recordExpOpt . RBRACE 

	RBRACE	shift 150


	.	error


state 137:

	recordExpOpt : COMMA . ID EQ exp recordExpOpt 

	ID	shift 151


	.	error


state 138:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	arrayDecExp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 50)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 50


state 139:

	funCallExpListOpt : COMMA exp funCallExpListOpt .  (reduce by rule 42)



	.	reduce by rule 42


state 140:

	letSeqExp : SEMICOLON exp letSeqExp .  (reduce by rule 47)



	.	reduce by rule 47


state 141:

	ty : ARRAY OF ID .  (reduce by rule 64)



	.	reduce by rule 64


state 142:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 63)



	.	reduce by rule 63


state 143:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	varDecOpt : COLON ID ASSIGN exp .  (reduce by rule 72)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 72


state 144:

	tyfieldscommaOpt : COMMA tyfieldsOne . tyfieldscommaOpt 

	COMMA	shift 130

	tyfieldscommaOpt	goto 152

	.	reduce by rule 69


state 145:

	fundec : FUNCTION ID LPAREN tyfields RPAREN fundecOpts .  (reduce by rule 75)



	.	reduce by rule 75


state 146:

	fundecOpts : EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 153
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 147:

	fundecOpts : COLON . ID EQ exp 

	ID	shift 154


	.	error


state 148:

	tyfieldsOne : ID COLON ID .  (reduce by rule 65)



	.	reduce by rule 65


state 149:

	forExp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 155
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 150:

	recordExp : ID LBRACE ID EQ exp recordExpOpt RBRACE .  (reduce by rule 32)



	.	reduce by rule 32


state 151:

	recordExpOpt : COMMA ID . EQ exp recordExpOpt 

	EQ	shift 156


	.	error


state 152:

	tyfieldscommaOpt : COMMA tyfieldsOne tyfieldscommaOpt .  (reduce by rule 68)



	.	reduce by rule 68


state 153:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	fundecOpts : EQ exp .  (reduce by rule 76)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 76


state 154:

	fundecOpts : COLON ID . EQ exp 

	EQ	shift 157


	.	error


state 155:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	forExp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 53)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 53


state 156:

	recordExpOpt : COMMA ID EQ . exp recordExpOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 158
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 157:

	fundecOpts : COLON ID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 159
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 158:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	recordExpOpt : COMMA ID EQ exp . recordExpOpt 

	COMMA	shift 137
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	recordExpOpt	goto 160

	.	reduce by rule 29


state 159:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	fundecOpts : COLON ID EQ exp .  (reduce by rule 77)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 77


state 160:

	recordExpOpt : COMMA ID EQ exp recordExpOpt .  (reduce by rule 30)



	.	reduce by rule 30


state 161:


	EOF	accept


	.	error

512 of 1108 action table entries left after compaction
420 goto table entries
