18 reduce/reduce conflicts
13 shift/reduce conflicts
non-shiftable terminal used on the rhs of 0 rules
5 rules not reduced

warning: rule <seqexp : LPAREN exp SEMICOLON exp seqexpOpt > will never be reduced
warning: rule <seqexpOpt : RPAREN > will never be reduced
warning: rule <seqexpOpt : seqexpOpt2 seqexpOpt > will never be reduced
warning: rule <seqexpOpt2 : SEMICOLON exp seqexpOpt2 > will never be reduced
warning: rule <seqexpOpt2 : > will never be reduced
warning: non-shiftable terminal EOFappears on the rhs of <program : exp EOF >
error:  state 27: shift/reduce conflict (shift FUNCTION, reduce by rule 4)
error:  state 30: shift/reduce conflict (shift TYPE, reduce by rule 2)
error:  state 75: shift/reduce conflict (shift ELSE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift GE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift GT, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift LE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift LT, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift NEQ, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift EQ, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift DIVIDE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift TIMES, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift MINUS, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift PLUS, reduce by rule 57)
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on NIL
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on LET
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on IF
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on GE
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on GT
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on LE
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on LT
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on NEQ
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on EQ
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on DIVIDE
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on TIMES
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on MINUS
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on PLUS
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on RPAREN
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on COMMA
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on STRING
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on INT
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on ID

state 0:

	program : . exp EOF 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 5
	program	goto 126
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 1:

	exp : ifExp .  (reduce by rule 42)



	.	reduce by rule 42


state 2:

	exp : assignExp .  (reduce by rule 54)



	.	reduce by rule 54


state 3:

	exp : recordExp .  (reduce by rule 41)



	.	reduce by rule 41


state 4:

	exp : lvalue .  (reduce by rule 39)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assignExp : lvalue . ASSIGN exp 

	LBRACK	shift 15
	DOT	shift 14
	ASSIGN	shift 13


	.	reduce by rule 39


state 5:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	program : exp . EOF 

	EOF	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	error


state 6:

	exp : NIL .  (reduce by rule 36)



	.	reduce by rule 36


state 7:

	exp : LET . decs IN letSeqExp END 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 33
	dec	goto 32
	tydec	goto 31
	tydecs	goto 30
	vardec	goto 29
	fundec	goto 28
	fundecs	goto 27

	.	reduce by rule 1


state 8:

	ifExp : IF . exp THEN exp ifExpOpt 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 37
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 38
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 10:

	exp : STRING .  (reduce by rule 37)



	.	reduce by rule 37


state 11:

	exp : INT .  (reduce by rule 35)



	.	reduce by rule 35


state 12:

	exp : ID . LPAREN funCallExpList RPAREN 
	lvalue : ID .  (reduce by rule 24)
	recordExp : ID . LBRACE RBRACE 
	recordExp : ID . LBRACE ID EQ exp recordExpOpt RBRACE 

	LPAREN	shift 40
	LBRACE	shift 39


	.	reduce by rule 24


state 13:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 41
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 14:

	lvalue : lvalue DOT . ID 

	ID	shift 42


	.	error


state 15:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 43
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 16:

	exp : exp GE . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 44
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 17:

	exp : exp GT . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 45
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 18:

	exp : exp LE . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 46
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 19:

	exp : exp LT . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 47
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 20:

	exp : exp NEQ . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 48
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 21:

	exp : exp EQ . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 49
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 22:

	exp : exp DIVIDE . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 50
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 23:

	exp : exp TIMES . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 51
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 24:

	exp : exp MINUS . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 52
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 25:

	exp : exp PLUS . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 53
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 26:

	program : exp EOF .  (reduce by rule 66)



	.	reduce by rule 66

error:  state 27: shift/reduce conflict (shift FUNCTION, reduce by rule 4)

state 27:

	dec : fundecs .  (reduce by rule 4)
	fundecs : fundecs . fundec 

	FUNCTION	shift 36

	fundec	goto 54

	.	reduce by rule 4


state 28:

	fundecs : fundec .  (reduce by rule 20)



	.	reduce by rule 20


state 29:

	dec : vardec .  (reduce by rule 3)



	.	reduce by rule 3

error:  state 30: shift/reduce conflict (shift TYPE, reduce by rule 2)

state 30:

	dec : tydecs .  (reduce by rule 2)
	tydecs : tydecs . tydec 

	TYPE	shift 34

	tydec	goto 55

	.	reduce by rule 2


state 31:

	tydecs : tydec .  (reduce by rule 6)



	.	reduce by rule 6


state 32:

	decs : dec . decs 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 56
	dec	goto 32
	tydec	goto 31
	tydecs	goto 30
	vardec	goto 29
	fundec	goto 28
	fundecs	goto 27

	.	reduce by rule 1


state 33:

	exp : LET decs . IN letSeqExp END 

	IN	shift 57


	.	error


state 34:

	tydec : TYPE . ID EQ ty 

	ID	shift 58


	.	error


state 35:

	vardec : VAR . ID varDecOpt 

	ID	shift 59


	.	error


state 36:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN fundecOpts 

	ID	shift 60


	.	error


state 37:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	ifExp : IF exp . THEN exp ifExpOpt 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	THEN	shift 61


	.	error


state 38:

	exp : MINUS exp .  (reduce by rule 43)
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 43


state 39:

	recordExp : ID LBRACE . RBRACE 
	recordExp : ID LBRACE . ID EQ exp recordExpOpt RBRACE 

	ID	shift 63
	RBRACE	shift 62


	.	error


state 40:

	exp : ID LPAREN . funCallExpList RPAREN 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	COMMA	shift 66
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 65
	lvalue	goto 4
	recordExp	goto 3
	funCallExpList	goto 64
	assignExp	goto 2
	ifExp	goto 1

	.	reduce by rule 63


state 41:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 62)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 62


state 42:

	lvalue : lvalue DOT ID .  (reduce by rule 25)



	.	reduce by rule 25


state 43:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 67
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	error


state 44:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 50)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	EOF	reduce by rule 50
	ID	reduce by rule 50
	INT	reduce by rule 50
	STRING	reduce by rule 50
	COMMA	reduce by rule 50
	SEMICOLON	reduce by rule 50
	RPAREN	reduce by rule 50
	RBRACK	reduce by rule 50
	RBRACE	reduce by rule 50
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	IF	reduce by rule 50
	THEN	reduce by rule 50
	ELSE	reduce by rule 50
	LET	reduce by rule 50
	IN	reduce by rule 50
	END	reduce by rule 50
	NIL	reduce by rule 50
	FUNCTION	reduce by rule 50
	VAR	reduce by rule 50
	TYPE	reduce by rule 50


	.	error


state 45:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 49)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	EOF	reduce by rule 49
	ID	reduce by rule 49
	INT	reduce by rule 49
	STRING	reduce by rule 49
	COMMA	reduce by rule 49
	SEMICOLON	reduce by rule 49
	RPAREN	reduce by rule 49
	RBRACK	reduce by rule 49
	RBRACE	reduce by rule 49
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	IF	reduce by rule 49
	THEN	reduce by rule 49
	ELSE	reduce by rule 49
	LET	reduce by rule 49
	IN	reduce by rule 49
	END	reduce by rule 49
	NIL	reduce by rule 49
	FUNCTION	reduce by rule 49
	VAR	reduce by rule 49
	TYPE	reduce by rule 49


	.	error


state 46:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 51)
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	EOF	reduce by rule 51
	ID	reduce by rule 51
	INT	reduce by rule 51
	STRING	reduce by rule 51
	COMMA	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	IF	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	LET	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	NIL	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 47:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 52)
	exp : exp . DIVIDE exp 

	EOF	reduce by rule 52
	ID	reduce by rule 52
	INT	reduce by rule 52
	STRING	reduce by rule 52
	COMMA	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	IF	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	LET	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	NIL	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 48:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 48)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	EOF	reduce by rule 48
	ID	reduce by rule 48
	INT	reduce by rule 48
	STRING	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	IF	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	LET	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48
	NIL	reduce by rule 48
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48


	.	error


state 49:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 47)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	EOF	reduce by rule 47
	ID	reduce by rule 47
	INT	reduce by rule 47
	STRING	reduce by rule 47
	COMMA	reduce by rule 47
	SEMICOLON	reduce by rule 47
	RPAREN	reduce by rule 47
	RBRACK	reduce by rule 47
	RBRACE	reduce by rule 47
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	IF	reduce by rule 47
	THEN	reduce by rule 47
	ELSE	reduce by rule 47
	LET	reduce by rule 47
	IN	reduce by rule 47
	END	reduce by rule 47
	NIL	reduce by rule 47
	FUNCTION	reduce by rule 47
	VAR	reduce by rule 47
	TYPE	reduce by rule 47


	.	error


state 50:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 53)



	.	reduce by rule 53


state 51:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 46)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 46


state 52:

	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 44)
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 44


state 53:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 45)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 45


state 54:

	fundecs : fundecs fundec .  (reduce by rule 19)



	.	reduce by rule 19


state 55:

	tydecs : tydecs tydec .  (reduce by rule 5)



	.	reduce by rule 5


state 56:

	decs : dec decs .  (reduce by rule 0)



	.	reduce by rule 0


state 57:

	exp : LET decs IN . letSeqExp END 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 69
	lvalue	goto 4
	letSeqExp	goto 68
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	reduce by rule 34


state 58:

	tydec : TYPE ID . EQ ty 

	EQ	shift 70


	.	error


state 59:

	vardec : VAR ID . varDecOpt 

	COLON	shift 73
	ASSIGN	shift 72

	varDecOpt	goto 71

	.	error


state 60:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN fundecOpts 

	LPAREN	shift 74


	.	error


state 61:

	ifExp : IF exp THEN . exp ifExpOpt 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 75
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 62:

	recordExp : ID LBRACE RBRACE .  (reduce by rule 58)



	.	reduce by rule 58


state 63:

	recordExp : ID LBRACE ID . EQ exp recordExpOpt RBRACE 

	EQ	shift 76


	.	error


state 64:

	exp : ID LPAREN funCallExpList . RPAREN 

	RPAREN	shift 77


	.	error


state 65:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	funCallExpList : exp . funCallExpList 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	COMMA	shift 66
	PLUS	shift 25
	MINUS	shift 79
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 65
	lvalue	goto 4
	recordExp	goto 3
	funCallExpList	goto 78
	assignExp	goto 2
	ifExp	goto 1

	.	reduce by rule 63


state 66:

	funCallExpList : COMMA . exp funCallExpList 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 80
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 67:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 26)



	.	reduce by rule 26


state 68:

	exp : LET decs IN letSeqExp . END 

	END	shift 81


	.	error


state 69:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	letSeqExp : exp . SEMICOLON letSeqExp 
	letSeqExp : exp .  (reduce by rule 33)

	SEMICOLON	shift 82
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 33


state 70:

	tydec : TYPE ID EQ . ty 

	ID	shift 86
	LBRACE	shift 85
	ARRAY	shift 84

	ty	goto 83

	.	error


state 71:

	vardec : VAR ID varDecOpt .  (reduce by rule 16)



	.	reduce by rule 16


state 72:

	varDecOpt : ASSIGN . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 87
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 73:

	varDecOpt : COLON . ID ASSIGN exp 

	ID	shift 88


	.	error


state 74:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN fundecOpts 

	ID	shift 91

	tyfields	goto 90
	tyfieldsOne	goto 89

	.	reduce by rule 13

error:  state 75: shift/reduce conflict (shift ELSE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift GE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift GT, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift LE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift LT, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift NEQ, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift EQ, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift DIVIDE, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift TIMES, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift MINUS, reduce by rule 57)
error:  state 75: shift/reduce conflict (shift PLUS, reduce by rule 57)

state 75:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	ifExp : IF exp THEN exp . ifExpOpt 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	ELSE	shift 93

	ifExpOpt	goto 92

	.	reduce by rule 57


state 76:

	recordExp : ID LBRACE ID EQ . exp recordExpOpt RBRACE 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 94
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 77:

	exp : ID LPAREN funCallExpList RPAREN .  (reduce by rule 40)



	.	reduce by rule 40


state 78:

	funCallExpList : exp funCallExpList .  (reduce by rule 64)



	.	reduce by rule 64


state 79:

	exp : MINUS . exp 
	exp : exp MINUS . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 95
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 80:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	funCallExpList : COMMA exp . funCallExpList 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	COMMA	shift 66
	PLUS	shift 25
	MINUS	shift 79
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 65
	lvalue	goto 4
	recordExp	goto 3
	funCallExpList	goto 96
	assignExp	goto 2
	ifExp	goto 1

	.	reduce by rule 63


state 81:

	exp : LET decs IN letSeqExp END .  (reduce by rule 38)



	.	reduce by rule 38


state 82:

	letSeqExp : exp SEMICOLON . letSeqExp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 69
	lvalue	goto 4
	letSeqExp	goto 97
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	reduce by rule 34


state 83:

	tydec : TYPE ID EQ ty .  (reduce by rule 7)



	.	reduce by rule 7


state 84:

	ty : ARRAY . OF ID 

	OF	shift 98


	.	error


state 85:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 91

	tyfields	goto 99
	tyfieldsOne	goto 89

	.	reduce by rule 13


state 86:

	ty : ID .  (reduce by rule 8)



	.	reduce by rule 8


state 87:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	varDecOpt : ASSIGN exp .  (reduce by rule 17)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 17


state 88:

	varDecOpt : COLON ID . ASSIGN exp 

	ASSIGN	shift 100


	.	error


state 89:

	tyfields : tyfieldsOne . tyfieldscommaOpt 

	COMMA	shift 102

	tyfieldscommaOpt	goto 101

	.	reduce by rule 15


state 90:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN fundecOpts 

	RPAREN	shift 103


	.	error


state 91:

	tyfieldsOne : ID . COLON ID 

	COLON	shift 104


	.	error


state 92:

	ifExp : IF exp THEN exp ifExpOpt .  (reduce by rule 55)



	.	reduce by rule 55


state 93:

	ifExpOpt : ELSE . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 105
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 94:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	recordExp : ID LBRACE ID EQ exp . recordExpOpt RBRACE 

	COMMA	shift 107
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16

	recordExpOpt	goto 106

	.	reduce by rule 60

error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on NIL
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on LET
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on IF
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on GE
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on GT
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on LE
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on LT
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on NEQ
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on EQ
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on DIVIDE
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on TIMES
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on MINUS
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on PLUS
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on RPAREN
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on COMMA
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on STRING
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on INT
error:  state 95: reduce/reduce conflict between rule 44 and rule 43 on ID

state 95:

	exp : MINUS exp .  (reduce by rule 43)
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 44)
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 

	ID	reduce by rule 43
	INT	reduce by rule 43
	STRING	reduce by rule 43
	COMMA	reduce by rule 43
	RPAREN	reduce by rule 43
	PLUS	reduce by rule 43
	MINUS	reduce by rule 43
	TIMES	reduce by rule 43
	DIVIDE	reduce by rule 43
	EQ	reduce by rule 43
	NEQ	reduce by rule 43
	LT	reduce by rule 43
	LE	reduce by rule 43
	GT	reduce by rule 43
	GE	reduce by rule 43
	IF	reduce by rule 43
	LET	reduce by rule 43
	NIL	reduce by rule 43


	.	error


state 96:

	funCallExpList : COMMA exp funCallExpList .  (reduce by rule 65)



	.	reduce by rule 65


state 97:

	letSeqExp : exp SEMICOLON letSeqExp .  (reduce by rule 32)



	.	reduce by rule 32


state 98:

	ty : ARRAY OF . ID 

	ID	shift 108


	.	error


state 99:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 109


	.	error


state 100:

	varDecOpt : COLON ID ASSIGN . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 110
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 101:

	tyfields : tyfieldsOne tyfieldscommaOpt .  (reduce by rule 12)



	.	reduce by rule 12


state 102:

	tyfieldscommaOpt : COMMA . tyfieldsOne tyfieldscommaOpt 

	ID	shift 91

	tyfieldsOne	goto 111

	.	error


state 103:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . fundecOpts 

	COLON	shift 114
	EQ	shift 113

	fundecOpts	goto 112

	.	error


state 104:

	tyfieldsOne : ID COLON . ID 

	ID	shift 115


	.	error


state 105:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	ifExpOpt : ELSE exp .  (reduce by rule 56)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 56


state 106:

	recordExp : ID LBRACE ID EQ exp recordExpOpt . RBRACE 

	RBRACE	shift 116


	.	error


state 107:

	recordExpOpt : COMMA . ID EQ exp recordExpOpt 

	ID	shift 117


	.	error


state 108:

	ty : ARRAY OF ID .  (reduce by rule 10)



	.	reduce by rule 10


state 109:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 9)



	.	reduce by rule 9


state 110:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	varDecOpt : COLON ID ASSIGN exp .  (reduce by rule 18)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 18


state 111:

	tyfieldscommaOpt : COMMA tyfieldsOne . tyfieldscommaOpt 

	COMMA	shift 102

	tyfieldscommaOpt	goto 118

	.	reduce by rule 15


state 112:

	fundec : FUNCTION ID LPAREN tyfields RPAREN fundecOpts .  (reduce by rule 21)



	.	reduce by rule 21


state 113:

	fundecOpts : EQ . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 119
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 114:

	fundecOpts : COLON . ID EQ exp 

	ID	shift 120


	.	error


state 115:

	tyfieldsOne : ID COLON ID .  (reduce by rule 11)



	.	reduce by rule 11


state 116:

	recordExp : ID LBRACE ID EQ exp recordExpOpt RBRACE .  (reduce by rule 59)



	.	reduce by rule 59


state 117:

	recordExpOpt : COMMA ID . EQ exp recordExpOpt 

	EQ	shift 121


	.	error


state 118:

	tyfieldscommaOpt : COMMA tyfieldsOne tyfieldscommaOpt .  (reduce by rule 14)



	.	reduce by rule 14


state 119:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	fundecOpts : EQ exp .  (reduce by rule 22)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 22


state 120:

	fundecOpts : COLON ID . EQ exp 

	EQ	shift 122


	.	error


state 121:

	recordExpOpt : COMMA ID EQ . exp recordExpOpt 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 123
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 122:

	fundecOpts : COLON ID EQ . exp 

	ID	shift 12
	INT	shift 11
	STRING	shift 10
	MINUS	shift 9
	IF	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 124
	lvalue	goto 4
	recordExp	goto 3
	assignExp	goto 2
	ifExp	goto 1

	.	error


state 123:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	recordExpOpt : COMMA ID EQ exp . recordExpOpt 

	COMMA	shift 107
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16

	recordExpOpt	goto 125

	.	reduce by rule 60


state 124:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . DIVIDE exp 
	fundecOpts : COLON ID EQ exp .  (reduce by rule 23)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 23


state 125:

	recordExpOpt : COMMA ID EQ exp recordExpOpt .  (reduce by rule 61)



	.	reduce by rule 61


state 126:


	EOF	accept


	.	error

371 of 706 action table entries left after compaction
185 goto table entries
