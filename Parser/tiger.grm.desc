2 shift/reduce conflicts

error:  state 35: shift/reduce conflict (shift FUNCTION, reduce by rule 57)
error:  state 38: shift/reduce conflict (shift TYPE, reduce by rule 55)

state 0:

	program : . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 10
	program	goto 160
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 1:

	exp : arrayDecExp .  (reduce by rule 27)



	.	reduce by rule 27


state 2:

	exp : breakExp .  (reduce by rule 26)



	.	reduce by rule 26


state 3:

	exp : forExp .  (reduce by rule 25)



	.	reduce by rule 25


state 4:

	exp : whileExp .  (reduce by rule 24)



	.	reduce by rule 24


state 5:

	exp : ifExp .  (reduce by rule 19)



	.	reduce by rule 19


state 6:

	exp : assignExp .  (reduce by rule 20)



	.	reduce by rule 20


state 7:

	exp : recordExp .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : seqexp .  (reduce by rule 22)



	.	reduce by rule 22


state 9:

	exp : lvalue .  (reduce by rule 18)
	assignExp : lvalue . ASSIGN exp 

	ASSIGN	shift 22


	.	reduce by rule 18


state 10:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 0


state 11:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 12:

	breakExp : BREAK .  (reduce by rule 51)



	.	reduce by rule 51


state 13:

	exp : LET . decs IN exp letSeqExp END 

	FUNCTION	shift 44
	VAR	shift 43
	TYPE	shift 42

	decs	goto 41
	dec	goto 40
	tydec	goto 39
	tydecs	goto 38
	vardec	goto 37
	fundec	goto 36
	fundecs	goto 35

	.	reduce by rule 54


state 14:

	forExp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 45


	.	error


state 15:

	whileExp : WHILE . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 46
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 16:

	ifExp : IF . exp THEN exp ELSE exp 
	ifExp : IF . exp THEN exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 47
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 17:

	exp : MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 48
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 18:

	seqexp : LPAREN . exp seqexpOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 49
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 19:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 20:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 21:

	exp : ID . LPAREN funCallExpList RPAREN 
	lvalue : ID . lvalueOpt 
	recordExp : ID . LBRACE RBRACE 
	recordExp : ID . LBRACE ID EQ exp recordExpOpt RBRACE 
	arrayDecExp : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 54
	LBRACK	shift 53
	LBRACE	shift 52
	DOT	shift 51

	lvalueOpt	goto 50

	.	reduce by rule 37


state 22:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 55
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 23:

	exp : exp OR . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 56
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 24:

	exp : exp AND . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 57
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 25:

	exp : exp GE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 58
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 26:

	exp : exp GT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 59
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 27:

	exp : exp LE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 60
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 28:

	exp : exp LT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 61
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 29:

	exp : exp NEQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 62
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 30:

	exp : exp EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 63
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 31:

	exp : exp DIVIDE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 64
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 32:

	exp : exp TIMES . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 65
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 33:

	exp : exp MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 66
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 34:

	exp : exp PLUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 67
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error

error:  state 35: shift/reduce conflict (shift FUNCTION, reduce by rule 57)

state 35:

	dec : fundecs .  (reduce by rule 57)
	fundecs : fundecs . fundec 

	FUNCTION	shift 44

	fundec	goto 68

	.	reduce by rule 57


state 36:

	fundecs : fundec .  (reduce by rule 73)



	.	reduce by rule 73


state 37:

	dec : vardec .  (reduce by rule 56)



	.	reduce by rule 56

error:  state 38: shift/reduce conflict (shift TYPE, reduce by rule 55)

state 38:

	dec : tydecs .  (reduce by rule 55)
	tydecs : tydecs . tydec 

	TYPE	shift 42

	tydec	goto 69

	.	reduce by rule 55


state 39:

	tydecs : tydec .  (reduce by rule 59)



	.	reduce by rule 59


state 40:

	decs : dec . decs 

	FUNCTION	shift 44
	VAR	shift 43
	TYPE	shift 42

	decs	goto 70
	dec	goto 40
	tydec	goto 39
	tydecs	goto 38
	vardec	goto 37
	fundec	goto 36
	fundecs	goto 35

	.	reduce by rule 54


state 41:

	exp : LET decs . IN exp letSeqExp END 

	IN	shift 71


	.	error


state 42:

	tydec : TYPE . ID EQ ty 

	ID	shift 72


	.	error


state 43:

	vardec : VAR . ID varDecOpt 

	ID	shift 73


	.	error


state 44:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN fundecOpts 

	ID	shift 74


	.	error


state 45:

	forExp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 75


	.	error


state 46:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	whileExp : WHILE exp . DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 76


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	ifExp : IF exp . THEN exp ELSE exp 
	ifExp : IF exp . THEN exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	THEN	shift 77


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	exp : MINUS exp .  (reduce by rule 16)



	.	reduce by rule 16


state 49:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	seqexp : LPAREN exp . seqexpOpt 

	SEMICOLON	shift 80
	RPAREN	shift 79
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	seqexpOpt	goto 78

	.	error


state 50:

	lvalue : ID lvalueOpt .  (reduce by rule 34)



	.	reduce by rule 34


state 51:

	lvalueOpt : DOT . ID lvalueOpt 

	ID	shift 81


	.	error


state 52:

	recordExp : ID LBRACE . RBRACE 
	recordExp : ID LBRACE . ID EQ exp recordExpOpt RBRACE 

	ID	shift 83
	RBRACE	shift 82


	.	error


state 53:

	arrayDecExp : ID LBRACK . exp RBRACK OF exp 
	lvalueOpt : LBRACK . exp RBRACK lvalueOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 84
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 54:

	exp : ID LPAREN . funCallExpList RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 86
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	funCallExpList	goto 85
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	reduce by rule 39


state 55:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 38)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 38


state 56:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 13)
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 13
	COMMA	reduce by rule 13
	SEMICOLON	reduce by rule 13
	RPAREN	reduce by rule 13
	RBRACK	reduce by rule 13
	RBRACE	reduce by rule 13
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	THEN	reduce by rule 13
	ELSE	reduce by rule 13
	TO	reduce by rule 13
	DO	reduce by rule 13
	IN	reduce by rule 13
	END	reduce by rule 13
	FUNCTION	reduce by rule 13
	VAR	reduce by rule 13
	TYPE	reduce by rule 13


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 12)
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 12
	COMMA	reduce by rule 12
	SEMICOLON	reduce by rule 12
	RPAREN	reduce by rule 12
	RBRACK	reduce by rule 12
	RBRACE	reduce by rule 12
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	THEN	reduce by rule 12
	ELSE	reduce by rule 12
	TO	reduce by rule 12
	DO	reduce by rule 12
	IN	reduce by rule 12
	END	reduce by rule 12
	FUNCTION	reduce by rule 12
	VAR	reduce by rule 12
	TYPE	reduce by rule 12


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 9)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 9
	COMMA	reduce by rule 9
	SEMICOLON	reduce by rule 9
	RPAREN	reduce by rule 9
	RBRACK	reduce by rule 9
	RBRACE	reduce by rule 9
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 9
	OR	reduce by rule 9
	THEN	reduce by rule 9
	ELSE	reduce by rule 9
	TO	reduce by rule 9
	DO	reduce by rule 9
	IN	reduce by rule 9
	END	reduce by rule 9
	FUNCTION	reduce by rule 9
	VAR	reduce by rule 9
	TYPE	reduce by rule 9


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 8)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 8
	COMMA	reduce by rule 8
	SEMICOLON	reduce by rule 8
	RPAREN	reduce by rule 8
	RBRACK	reduce by rule 8
	RBRACE	reduce by rule 8
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 8
	OR	reduce by rule 8
	THEN	reduce by rule 8
	ELSE	reduce by rule 8
	TO	reduce by rule 8
	DO	reduce by rule 8
	IN	reduce by rule 8
	END	reduce by rule 8
	FUNCTION	reduce by rule 8
	VAR	reduce by rule 8
	TYPE	reduce by rule 8


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 10)
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 10
	COMMA	reduce by rule 10
	SEMICOLON	reduce by rule 10
	RPAREN	reduce by rule 10
	RBRACK	reduce by rule 10
	RBRACE	reduce by rule 10
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 10
	OR	reduce by rule 10
	THEN	reduce by rule 10
	ELSE	reduce by rule 10
	TO	reduce by rule 10
	DO	reduce by rule 10
	IN	reduce by rule 10
	END	reduce by rule 10
	FUNCTION	reduce by rule 10
	VAR	reduce by rule 10
	TYPE	reduce by rule 10


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 11)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 11
	COMMA	reduce by rule 11
	SEMICOLON	reduce by rule 11
	RPAREN	reduce by rule 11
	RBRACK	reduce by rule 11
	RBRACE	reduce by rule 11
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 11
	OR	reduce by rule 11
	THEN	reduce by rule 11
	ELSE	reduce by rule 11
	TO	reduce by rule 11
	DO	reduce by rule 11
	IN	reduce by rule 11
	END	reduce by rule 11
	FUNCTION	reduce by rule 11
	VAR	reduce by rule 11
	TYPE	reduce by rule 11


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 7)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 7
	COMMA	reduce by rule 7
	SEMICOLON	reduce by rule 7
	RPAREN	reduce by rule 7
	RBRACK	reduce by rule 7
	RBRACE	reduce by rule 7
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 7
	OR	reduce by rule 7
	THEN	reduce by rule 7
	ELSE	reduce by rule 7
	TO	reduce by rule 7
	DO	reduce by rule 7
	IN	reduce by rule 7
	END	reduce by rule 7
	FUNCTION	reduce by rule 7
	VAR	reduce by rule 7
	TYPE	reduce by rule 7


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 6)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	EOF	reduce by rule 6
	COMMA	reduce by rule 6
	SEMICOLON	reduce by rule 6
	RPAREN	reduce by rule 6
	RBRACK	reduce by rule 6
	RBRACE	reduce by rule 6
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 6
	OR	reduce by rule 6
	THEN	reduce by rule 6
	ELSE	reduce by rule 6
	TO	reduce by rule 6
	DO	reduce by rule 6
	IN	reduce by rule 6
	END	reduce by rule 6
	FUNCTION	reduce by rule 6
	VAR	reduce by rule 6
	TYPE	reduce by rule 6


	.	error


state 64:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 14)
	exp : exp . MINUS exp 



	.	reduce by rule 14


state 65:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 5)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 



	.	reduce by rule 5


state 66:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 15)

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 15


state 67:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 4)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 4


state 68:

	fundecs : fundecs fundec .  (reduce by rule 72)



	.	reduce by rule 72


state 69:

	tydecs : tydecs tydec .  (reduce by rule 58)



	.	reduce by rule 58


state 70:

	decs : dec decs .  (reduce by rule 53)



	.	reduce by rule 53


state 71:

	exp : LET decs IN . exp letSeqExp END 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 87
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 72:

	tydec : TYPE ID . EQ ty 

	EQ	shift 88


	.	error


state 73:

	vardec : VAR ID . varDecOpt 

	COLON	shift 91
	ASSIGN	shift 90

	varDecOpt	goto 89

	.	error


state 74:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN fundecOpts 

	LPAREN	shift 92


	.	error


state 75:

	forExp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 93
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 76:

	whileExp : WHILE exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 94
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 77:

	ifExp : IF exp THEN . exp ELSE exp 
	ifExp : IF exp THEN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 95
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 78:

	seqexp : LPAREN exp seqexpOpt .  (reduce by rule 43)



	.	reduce by rule 43


state 79:

	seqexpOpt : RPAREN .  (reduce by rule 44)



	.	reduce by rule 44


state 80:

	seqexpOpt : SEMICOLON . exp seqexpOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 96
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 81:

	lvalueOpt : DOT ID . lvalueOpt 

	LBRACK	shift 98
	DOT	shift 51

	lvalueOpt	goto 97

	.	reduce by rule 37


state 82:

	recordExp : ID LBRACE RBRACE .  (reduce by rule 30)



	.	reduce by rule 30


state 83:

	recordExp : ID LBRACE ID . EQ exp recordExpOpt RBRACE 

	EQ	shift 99


	.	error


state 84:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	arrayDecExp : ID LBRACK exp . RBRACK OF exp 
	lvalueOpt : LBRACK exp . RBRACK lvalueOpt 

	RBRACK	shift 100
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 85:

	exp : ID LPAREN funCallExpList . RPAREN 

	RPAREN	shift 101


	.	error


state 86:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	funCallExpList : exp . funCallExpListOpt 

	COMMA	shift 103
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	funCallExpListOpt	goto 102

	.	reduce by rule 42


state 87:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	exp : LET decs IN exp . letSeqExp END 

	SEMICOLON	shift 105
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	letSeqExp	goto 104

	.	reduce by rule 48


state 88:

	tydec : TYPE ID EQ . ty 

	ID	shift 109
	LBRACE	shift 108
	ARRAY	shift 107

	ty	goto 106

	.	error


state 89:

	vardec : VAR ID varDecOpt .  (reduce by rule 69)



	.	reduce by rule 69


state 90:

	varDecOpt : ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 110
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 91:

	varDecOpt : COLON . ID ASSIGN exp 

	ID	shift 111


	.	error


state 92:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN fundecOpts 

	ID	shift 114

	tyfields	goto 113
	tyfieldsOne	goto 112

	.	reduce by rule 66


state 93:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	forExp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	TO	shift 115


	.	error


state 94:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	whileExp : WHILE exp DO exp .  (reduce by rule 50)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 50


state 95:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	ifExp : IF exp THEN exp . ELSE exp 
	ifExp : IF exp THEN exp .  (reduce by rule 33)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	ELSE	shift 116


	.	reduce by rule 33


state 96:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	seqexpOpt : SEMICOLON exp . seqexpOpt 

	SEMICOLON	shift 80
	RPAREN	shift 79
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	seqexpOpt	goto 117

	.	error


state 97:

	lvalueOpt : DOT ID lvalueOpt .  (reduce by rule 35)



	.	reduce by rule 35


state 98:

	lvalueOpt : LBRACK . exp RBRACK lvalueOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 118
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 99:

	recordExp : ID LBRACE ID EQ . exp recordExpOpt RBRACE 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 119
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 100:

	arrayDecExp : ID LBRACK exp RBRACK . OF exp 
	lvalueOpt : LBRACK exp RBRACK . lvalueOpt 

	LBRACK	shift 98
	DOT	shift 51
	OF	shift 121

	lvalueOpt	goto 120

	.	reduce by rule 37


state 101:

	exp : ID LPAREN funCallExpList RPAREN .  (reduce by rule 21)



	.	reduce by rule 21


state 102:

	funCallExpList : exp funCallExpListOpt .  (reduce by rule 40)



	.	reduce by rule 40


state 103:

	funCallExpListOpt : COMMA . exp funCallExpListOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 122
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 104:

	exp : LET decs IN exp letSeqExp . END 

	END	shift 123


	.	error


state 105:

	letSeqExp : SEMICOLON . exp letSeqExp 
	letSeqExp : SEMICOLON .  (reduce by rule 47)

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 124
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	reduce by rule 47


state 106:

	tydec : TYPE ID EQ ty .  (reduce by rule 60)



	.	reduce by rule 60


state 107:

	ty : ARRAY . OF ID 

	OF	shift 125


	.	error


state 108:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 114

	tyfields	goto 126
	tyfieldsOne	goto 112

	.	reduce by rule 66


state 109:

	ty : ID .  (reduce by rule 61)



	.	reduce by rule 61


state 110:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	varDecOpt : ASSIGN exp .  (reduce by rule 70)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 70


state 111:

	varDecOpt : COLON ID . ASSIGN exp 

	ASSIGN	shift 127


	.	error


state 112:

	tyfields : tyfieldsOne . tyfieldscommaOpt 

	COMMA	shift 129

	tyfieldscommaOpt	goto 128

	.	reduce by rule 68


state 113:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN fundecOpts 

	RPAREN	shift 130


	.	error


state 114:

	tyfieldsOne : ID . COLON ID 

	COLON	shift 131


	.	error


state 115:

	forExp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 132
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 116:

	ifExp : IF exp THEN exp ELSE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 133
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 117:

	seqexpOpt : SEMICOLON exp seqexpOpt .  (reduce by rule 45)



	.	reduce by rule 45


state 118:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	lvalueOpt : LBRACK exp . RBRACK lvalueOpt 

	RBRACK	shift 134
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 119:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	recordExp : ID LBRACE ID EQ exp . recordExpOpt RBRACE 

	COMMA	shift 136
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	recordExpOpt	goto 135

	.	reduce by rule 28


state 120:

	lvalueOpt : LBRACK exp RBRACK lvalueOpt .  (reduce by rule 36)



	.	reduce by rule 36


state 121:

	arrayDecExp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 137
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 122:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	funCallExpListOpt : COMMA exp . funCallExpListOpt 

	COMMA	shift 103
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	funCallExpListOpt	goto 138

	.	reduce by rule 42


state 123:

	exp : LET decs IN exp letSeqExp END .  (reduce by rule 23)



	.	reduce by rule 23


state 124:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	letSeqExp : SEMICOLON exp . letSeqExp 

	SEMICOLON	shift 105
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	letSeqExp	goto 139

	.	reduce by rule 48


state 125:

	ty : ARRAY OF . ID 

	ID	shift 140


	.	error


state 126:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 141


	.	error


state 127:

	varDecOpt : COLON ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 142
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 128:

	tyfields : tyfieldsOne tyfieldscommaOpt .  (reduce by rule 65)



	.	reduce by rule 65


state 129:

	tyfieldscommaOpt : COMMA . tyfieldsOne tyfieldscommaOpt 

	ID	shift 114

	tyfieldsOne	goto 143

	.	error


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . fundecOpts 

	COLON	shift 146
	EQ	shift 145

	fundecOpts	goto 144

	.	error


state 131:

	tyfieldsOne : ID COLON . ID 

	ID	shift 147


	.	error


state 132:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	forExp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 148


	.	error


state 133:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	ifExp : IF exp THEN exp ELSE exp .  (reduce by rule 32)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 32


state 134:

	lvalueOpt : LBRACK exp RBRACK . lvalueOpt 

	LBRACK	shift 98
	DOT	shift 51

	lvalueOpt	goto 120

	.	reduce by rule 37


state 135:

	recordExp : ID LBRACE ID EQ exp recordExpOpt . RBRACE 

	RBRACE	shift 149


	.	error


state 136:

	recordExpOpt : COMMA . ID EQ exp recordExpOpt 

	ID	shift 150


	.	error


state 137:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	arrayDecExp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 49)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 49


state 138:

	funCallExpListOpt : COMMA exp funCallExpListOpt .  (reduce by rule 41)



	.	reduce by rule 41


state 139:

	letSeqExp : SEMICOLON exp letSeqExp .  (reduce by rule 46)



	.	reduce by rule 46


state 140:

	ty : ARRAY OF ID .  (reduce by rule 63)



	.	reduce by rule 63


state 141:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 62)



	.	reduce by rule 62


state 142:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	varDecOpt : COLON ID ASSIGN exp .  (reduce by rule 71)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 71


state 143:

	tyfieldscommaOpt : COMMA tyfieldsOne . tyfieldscommaOpt 

	COMMA	shift 129

	tyfieldscommaOpt	goto 151

	.	reduce by rule 68


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN fundecOpts .  (reduce by rule 74)



	.	reduce by rule 74


state 145:

	fundecOpts : EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 152
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 146:

	fundecOpts : COLON . ID EQ exp 

	ID	shift 153


	.	error


state 147:

	tyfieldsOne : ID COLON ID .  (reduce by rule 64)



	.	reduce by rule 64


state 148:

	forExp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 154
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 149:

	recordExp : ID LBRACE ID EQ exp recordExpOpt RBRACE .  (reduce by rule 31)



	.	reduce by rule 31


state 150:

	recordExpOpt : COMMA ID . EQ exp recordExpOpt 

	EQ	shift 155


	.	error


state 151:

	tyfieldscommaOpt : COMMA tyfieldsOne tyfieldscommaOpt .  (reduce by rule 67)



	.	reduce by rule 67


state 152:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	fundecOpts : EQ exp .  (reduce by rule 75)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 75


state 153:

	fundecOpts : COLON ID . EQ exp 

	EQ	shift 156


	.	error


state 154:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	forExp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 52)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 52


state 155:

	recordExpOpt : COMMA ID EQ . exp recordExpOpt 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 157
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 156:

	fundecOpts : COLON ID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 158
	lvalue	goto 9
	seqexp	goto 8
	recordExp	goto 7
	assignExp	goto 6
	ifExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	breakExp	goto 2
	arrayDecExp	goto 1

	.	error


state 157:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	recordExpOpt : COMMA ID EQ exp . recordExpOpt 

	COMMA	shift 136
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	recordExpOpt	goto 159

	.	reduce by rule 28


state 158:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . DIVIDE exp 
	exp : exp . MINUS exp 
	fundecOpts : COLON ID EQ exp .  (reduce by rule 76)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 76


state 159:

	recordExpOpt : COMMA ID EQ exp recordExpOpt .  (reduce by rule 29)



	.	reduce by rule 29


state 160:


	EOF	accept


	.	error

530 of 1136 action table entries left after compaction
420 goto table entries
